{"version":3,"sources":["App.js","data.js","serviceWorker.js","index.js"],"names":["dataSource","DataSource","store","ArrayStore","data","ID","FirstName","LastName","HireDate","Residence","IsTested","key","App","props","gridRef","React","createRef","copyViaExcelExport","bind","toolbarCopy","e","row","str","prop","undefined","navigator","clipboard","writeText","then","notify","toolbarOptions","items","push","widget","location","options","hint","icon","onClick","this","sheet","ExcelJS","addWorksheet","col","grid","getVisibleColumns","lastColumn","filter","x","dataField","allowExporting","length","exportDataGrid","component","worksheet","customizeCell","gridCell","field","column","rowType","caption","value","groupSummaryItems","forEach","name","totalSummaryItemName","console","log","current","instance","ref","allowColumnResizing","onToolbarPreparing","width","groupIndex","type","rowCopy","mode","allowAdding","allowUpdating","allowDeleting","useIcons","visible","summaryType","alignByColumn","showInGroupFooter","displayFormat","Component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0703de62.chunk.js","sourcesContent":["import 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport React from 'react';\r\nimport './App.css';\r\nimport { data } from \"./data\";\r\n\r\nimport DataGrid, { Editing, Column, GroupPanel, GroupItem, TotalItem, FilterRow, Summary, Button } from \"devextreme-react/data-grid\";\r\nimport { exportDataGrid } from \"devextreme/excel_exporter\";\r\nimport notify from \"devextreme/ui/notify\";\r\nimport DataSource from 'devextreme/data/data_source';\r\nimport ArrayStore from 'devextreme/data/array_store';\r\n\r\nimport * as ExcelJS from \"exceljs\";\r\n\r\nconst dataSource = new DataSource({\r\n    store: new ArrayStore({\r\n        data: data,\r\n        key: \"ID\"\r\n    })\r\n});\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.gridRef = React.createRef();\r\n\r\n        this.copyViaExcelExport = this.copyViaExcelExport.bind(this);\r\n        this.toolbarCopy = this.toolbarCopy.bind(this);\r\n    }\r\n\r\n    rowCopy(e) {\r\n        let data = e.row.data;\r\n        let str = \"\";\r\n\r\n        for (let prop in data) {\r\n            if (data[prop] !== undefined) {\r\n                str += `${data[prop]}\\t`;\r\n            }\r\n        }\r\n\r\n        navigator.clipboard.writeText(str).then(() => {\r\n            notify(\"Row data copied to clipboard.\", \"success\", 500);\r\n        }, () => {\r\n            notify(\"Row data was not copied. There are insufficient permissions for this action.\", \"error\", 500);\r\n        });\r\n    }\r\n\r\n    toolbarCopy(e) {\r\n        e.toolbarOptions.items.push({\r\n            widget: \"dxButton\",\r\n            location: \"after\",\r\n            options: {\r\n                hint: \"Copy via Export\",\r\n                icon: \"unselectall\",\r\n                onClick: this.copyViaExcelExport\r\n            }\r\n        });\r\n    }\r\n\r\n    copyViaExcelExport(e) {\r\n        let workbook = new ExcelJS.Workbook();\r\n        let sheet = workbook.addWorksheet(\"dummy\");\r\n        let str = \"\";\r\n\r\n        let col = this.grid.getVisibleColumns();\r\n        // keep exportable columns and get the last-most column\r\n        col = col.filter((x) => x.dataField !== undefined && x.allowExporting === true);\r\n        let lastColumn = col[col.length - 1].dataField;\r\n\r\n        exportDataGrid({\r\n            component: this.grid,\r\n            worksheet: sheet,\r\n            customizeCell: function (options) {\r\n                let { gridCell } = options;\r\n                let field = gridCell.column.dataField;\r\n\r\n                switch (gridCell.rowType) {\r\n                    // export header row\r\n                    case \"header\":\r\n                        str += `${gridCell.column.caption}\\t`;\r\n                        break;\r\n                    // export data row\r\n                    case \"data\":\r\n                        str += `${gridCell.value}\\t`;\r\n                        break;\r\n                    // export group row\r\n                    case \"group\":\r\n                        if (gridCell.value)\r\n                            str += `${field}: ${gridCell.value} `;\r\n\r\n                        if (gridCell.groupSummaryItems !== undefined && gridCell.groupSummaryItems.length >= 1) {\r\n                            gridCell.groupSummaryItems.forEach(x => {\r\n                                str += ` ${x.name}: ${x.value} `;\r\n                            });\r\n                        }\r\n\r\n                        str += `\\t`;\r\n\r\n                        break;\r\n                    // export groupFooter & totalFooter. Create a separate switch case if you need different actions (ie different spacing)\r\n                    case \"groupFooter\":\r\n                    case \"totalFooter\":\r\n                        str += (gridCell.value === undefined ? `\\t` : `${gridCell.totalSummaryItemName}: ${gridCell.value}\\t`);\r\n\r\n                        break;\r\n                    default:\r\n                        console.log(\"Unknown row type detected. Please check possible DataGrid breaking changes regarding rowType\", gridCell);\r\n\r\n                        break;\r\n                }\r\n\r\n                if (field === lastColumn) {\r\n                    str += `\\r\\n`;\r\n                }\r\n            }\r\n        }).then(() => {\r\n            console.log(str);\r\n            navigator.clipboard.writeText(str).then(() => {\r\n                notify(\"Grid data copied to clipboard.\", \"success\", 500);\r\n            }, () => {\r\n                notify(\"Grid data was not copied. There are insufficient permissions for this action.\", \"error\", 500);\r\n            });\r\n        });\r\n    }\r\n\r\n    get grid() {\r\n        return this.gridRef.current.instance;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DataGrid\r\n                ref={this.gridRef}\r\n                allowColumnResizing={true}\r\n                dataSource={dataSource}\r\n                onToolbarPreparing={this.toolbarCopy}>\r\n                <Column dataField=\"ID\" width={200} />\r\n                <Column dataField=\"FirstName\" />\r\n                <Column dataField=\"LastName\" />\r\n                <Column dataField=\"HireDate\" />\r\n                <Column dataField=\"Residence\" groupIndex={0} />\r\n                <Column dataField=\"IsTested\" />\r\n                <Column type=\"buttons\">\r\n                    <Button name=\"edit\"></Button>\r\n                    <Button name=\"delete\"></Button>\r\n                    <Button hint=\"Copy row\" icon=\"copy\" onClick={this.rowCopy}></Button>\r\n                </Column>\r\n                <Editing\r\n                    mode=\"popup\"\r\n                    allowAdding={true}\r\n                    allowUpdating={true}\r\n                    allowDeleting={true}\r\n                    useIcons={true}\r\n                />\r\n                <FilterRow visible={true} />\r\n                <GroupPanel visible={true} />\r\n\r\n                <Summary>\r\n                    <GroupItem\r\n                        column=\"LastName\"\r\n                        summaryType=\"count\"\r\n                        name=\"Count\"\r\n                        alignByColumn={true} />\r\n                    <GroupItem\r\n                        column=\"LastName\"\r\n                        summaryType=\"count\"\r\n                        name=\"Count\" />\r\n                    <GroupItem\r\n                        column=\"IsTested\"\r\n                        summaryType=\"count\"\r\n                        showInGroupFooter={true}\r\n                        name=\"Count\"\r\n                        alignByColumn={true} />\r\n                    <TotalItem\r\n                        column=\"ID\"\r\n                        summaryType=\"count\"\r\n                        displayFormat={'No. of employees: {0}'}\r\n                        name=\"No. of employees\" />\r\n                    <TotalItem\r\n                        column=\"HireDate\"\r\n                        summaryType=\"count\"\r\n                        name=\"Dates\" />\r\n                </Summary>\r\n            </DataGrid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","export let data = [\r\n    {\r\n        ID: 1,\r\n        FirstName: \"Reed\",\r\n        LastName: \"Alston\",\r\n        HireDate: \"08/09/2020\",\r\n        Residence: \"Levin\",\r\n        IsTested: true\r\n    },\r\n    {\r\n        ID: 2,\r\n        FirstName: \"Melodie\",\r\n        LastName: \"Finch\",\r\n        HireDate: \"24/02/2020\",\r\n        Residence: \"Offida\",\r\n        IsTested: true\r\n    },\r\n    {\r\n        ID: 3,\r\n        FirstName: \"Jack\",\r\n        LastName: \"Sargent\",\r\n        HireDate: \"29/04/2020\",\r\n        Residence: \"Carstairs\",\r\n        IsTested: false\r\n    },\r\n    {\r\n        ID: 4,\r\n        FirstName: \"Ashton\",\r\n        LastName: \"Gilmore\",\r\n        HireDate: \"06/04/2020\",\r\n        Residence: \"Levin\",\r\n        IsTested: true\r\n    },\r\n    {\r\n        ID: 5,\r\n        FirstName: \"Madison\",\r\n        LastName: \"Levin\",\r\n        HireDate: \"03/08/2020\",\r\n        Residence: \"Carstairs\",\r\n        IsTested: true\r\n    },\r\n    {\r\n        ID: 6,\r\n        FirstName: \"Hoyt\",\r\n        LastName: \"Lewis\",\r\n        HireDate: \"07/02/2020\",\r\n        Residence: \"Offida\",\r\n        IsTested: true\r\n    },\r\n    {\r\n        ID: 7,\r\n        FirstName: \"Ian\",\r\n        LastName: \"Dixon\",\r\n        HireDate: \"05/04/2021\",\r\n        Residence: \"Offida\",\r\n        IsTested: false\r\n    },\r\n    {\r\n        ID: 8,\r\n        FirstName: \"Brody\",\r\n        LastName: \"Crane\",\r\n        HireDate: \"09/09/2021\",\r\n        Residence: \"Offida\",\r\n        IsTested: true\r\n    },\r\n    {\r\n        ID: 9,\r\n        FirstName: \"Valentine\",\r\n        LastName: \"Lancaster\",\r\n        HireDate: \"03/03/2021\",\r\n        Residence: \"Carstairs\",\r\n        IsTested: false\r\n    },\r\n    {\r\n        ID: 10,\r\n        FirstName: \"Hilel\",\r\n        LastName: \"Riddle\",\r\n        HireDate: \"01/02/2020\",\r\n        Residence: \"Carstairs\",\r\n        IsTested: true\r\n    },\r\n    {\r\n        ID: 11,\r\n        FirstName: \"Lyle\",\r\n        LastName: \"Fischer\",\r\n        HireDate: \"30/06/2020\",\r\n        Residence: \"Carstairs\",\r\n        IsTested: true\r\n    },\r\n    {\r\n        ID: 12,\r\n        FirstName: \"Marny\",\r\n        LastName: \"Kennedy\",\r\n        HireDate: \"22/11/2020\",\r\n        Residence: \"Levin\",\r\n        IsTested: true\r\n    },\r\n    {\r\n        ID: 13,\r\n        FirstName: \"Hector\",\r\n        LastName: \"Spencer\",\r\n        HireDate: \"16/06/2020\",\r\n        Residence: \"Levin\",\r\n        IsTested: false\r\n    },\r\n    {\r\n        ID: 14,\r\n        FirstName: \"Tatyana\",\r\n        LastName: \"Delacruz\",\r\n        HireDate: \"16/07/2020\",\r\n        Residence: \"Levin\",\r\n        IsTested: false\r\n    },\r\n    {\r\n        ID: 15,\r\n        FirstName: \"Chastity\",\r\n        LastName: \"Dyer\",\r\n        HireDate: \"16/12/2020\",\r\n        Residence: \"Offida\",\r\n        IsTested: true\r\n    },\r\n    {\r\n        ID: 16,\r\n        FirstName: \"Constance\",\r\n        LastName: \"Merritt\",\r\n        HireDate: \"15/01/2020\",\r\n        Residence: \"Offida\",\r\n        IsTested: true\r\n    },\r\n    {\r\n        ID: 17,\r\n        FirstName: \"Robin\",\r\n        LastName: \"Sparks\",\r\n        HireDate: \"09/07/2021\",\r\n        Residence: \"Offida\",\r\n        IsTested: true\r\n    },\r\n    {\r\n        ID: 18,\r\n        FirstName: \"Marshall\",\r\n        LastName: \"Jarvis\",\r\n        HireDate: \"22/11/2020\",\r\n        Residence: \"Carstairs\",\r\n        IsTested: false\r\n    },\r\n    {\r\n        ID: 19,\r\n        FirstName: \"Julian\",\r\n        LastName: \"Yates\",\r\n        HireDate: \"25/01/2021\",\r\n        Residence: \"Carstairs\",\r\n        IsTested: true\r\n    },\r\n    {\r\n        ID: 20,\r\n        FirstName: \"Hayley\",\r\n        LastName: \"Bray\",\r\n        HireDate: \"27/08/2021\",\r\n        Residence: \"Carstairs\",\r\n        IsTested: false\r\n    },\r\n    {\r\n        ID: 21,\r\n        FirstName: \"Adrienne\",\r\n        LastName: \"Oneil\",\r\n        HireDate: \"23/05/2020\",\r\n        Residence: \"Carstairs\",\r\n        IsTested: true\r\n    },\r\n    {\r\n        ID: 22,\r\n        FirstName: \"Kiara\",\r\n        LastName: \"Galloway\",\r\n        HireDate: \"28/05/2020\",\r\n        Residence: \"Levin\",\r\n        IsTested: false\r\n    },\r\n    {\r\n        ID: 23,\r\n        FirstName: \"Hayes\",\r\n        LastName: \"Haynes\",\r\n        HireDate: \"16/01/2020\",\r\n        Residence: \"Levin\",\r\n        IsTested: false\r\n    },\r\n    {\r\n        ID: 24,\r\n        FirstName: \"Aaron\",\r\n        LastName: \"Holt\",\r\n        HireDate: \"13/12/2020\",\r\n        Residence: \"Levin\",\r\n        IsTested: true\r\n    },\r\n    {\r\n        ID: 25,\r\n        FirstName: \"Idola\",\r\n        LastName: \"Barry\",\r\n        HireDate: \"30/10/2019\",\r\n        Residence: \"Offida\",\r\n        IsTested: false\r\n    },\r\n    {\r\n        ID: 26,\r\n        FirstName: \"Kristen\",\r\n        LastName: \"Waters\",\r\n        HireDate: \"12/07/2020\",\r\n        Residence: \"Offida\",\r\n        IsTested: true\r\n    },\r\n    {\r\n        ID: 27,\r\n        FirstName: \"Paki\",\r\n        LastName: \"Patton\",\r\n        HireDate: \"24/07/2021\",\r\n        Residence: \"Offida\",\r\n        IsTested: true\r\n    },\r\n    {\r\n        ID: 28,\r\n        FirstName: \"Nehru\",\r\n        LastName: \"Lara\",\r\n        HireDate: \"17/12/2020\",\r\n        Residence: \"Carstairs\",\r\n        IsTested: true\r\n    },\r\n    {\r\n        ID: 29,\r\n        FirstName: \"Audrey\",\r\n        LastName: \"Gentry\",\r\n        HireDate: \"31/03/2021\",\r\n        Residence: \"Carstairs\",\r\n        IsTested: false\r\n    },\r\n    {\r\n        ID: 30,\r\n        FirstName: \"Ebony\",\r\n        LastName: \"Mccormick\",\r\n        HireDate: \"04/06/2021\",\r\n        Residence: \"Carstairs\",\r\n        IsTested: false\r\n    }];","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}